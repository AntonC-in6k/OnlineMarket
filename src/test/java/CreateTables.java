import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Created by employee on 7/25/16.
 */
public class CreateTables {
    protected void createTables(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement(
                "CREATE TABLE Categories" +
                        "(CategoryId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "CategoryName varchar(100), PRIMARY KEY(CategoryId))");
        statement.executeUpdate();
//        statement = connection.prepareStatement(
//                "CREATE TABLE Customers" +
//                        "(CustomerId int not null GENERATED BY DEFAULT AS IDENTITY, " +
//                        "CustomerName varchar(100) not null, " +
//                        "PRIMARY KEY (CustomerId));");
//        statement.executeUpdate();
//        statement = connection.prepareStatement(
//                "CREATE TABLE Purchases" +
//                        "(PurchaseId int not null GENERATED BY DEFAULT AS IDENTITY, CustomerId int, " +
//                        "DateTime TIMESTAMP, Cost decimal(7,2), PRIMARY KEY(PurchaseId))");
//        statement.executeUpdate();
        statement = connection.prepareStatement(
                "CREATE TABLE Items" +
                        "(ItemId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "ItemName varchar(100) not null, CategoryId int not null, " +
                        "Cost decimal(7,2) not null, " +
                        "PRIMARY KEY (ItemId), FOREIGN KEY (CategoryId) " +
                        "REFERENCES Categories(CategoryId));");
        statement.executeUpdate();


//        statement = connection.prepareStatement(
//                "CREATE TABLE ItemsInPurchase" +
//                        "(PurchaseId int not null, ItemId int not null, " +
//                        "ItemsNumber int not null, Price decimal(7,2) not null, " +
//                        "FOREIGN KEY (ItemId) REFERENCES Items(ItemId), " +
//                        "FOREIGN KEY (PurchaseId) REFERENCES Purchases(PurchaseId));");
//        statement.executeUpdate();

        statement.close();
    }

    protected void fillTables(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement("INSERT INTO Categories " +
                "(CategoryName) VALUES ('Smart phone'),('laptop')");
        statement.executeUpdate();
        statement = connection.prepareStatement("INSERT INTO Items " +
                "(ItemName,CategoryId,Cost) VALUES ('Nokia',0,250),('LG', 0,500),('SONY',0,600)," +
                "('Lenovo',1,400),('ASUS',1,350),('HP',1,400)");
        statement.executeUpdate();
//        statement = connection.prepareStatement("INSERT INTO Orders " +
//                "(user_id,dateTime,total) VALUES (0,'2016-06-18 10:34:09','14250'),(1,'2016-02-14 8:47:01','1100')");
//        statement.execute();
//        statement = connection.prepareStatement("INSERT INTO Orders_Items " +
//                "(order_id,item_id,number) VALUES (0,3,7),(0,4,9),(0,5,11),(0,6,10),(0,7,2),(1,1,3),(1,2,3)");
//        statement.execute();
//        statement = connection.prepareStatement("INSERT INTO USERS (name) VALUES ('IVAN IVANOVICH')");
        statement.close();
    }
}
