/**
 * Created by employee on 7/21/16.
 */

import dao.CategoryDao;
import entity.Category;
import entity.Items;
import dao.ItemsDao;
import org.junit.Before;
import org.junit.Test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import static org.junit.Assert.assertThat;
import static org.junit.Assert.assertTrue;
import static org.hamcrest.CoreMatchers.is;

public class CategoryDaoTest {
    private CategoryDao categoryDao;
    private ItemsDao itemsDao;
    private SqlConnectionForTestImpl sqlConnectionForTest;

    @Before
    public void init() throws Exception {
        sqlConnectionForTest = new SqlConnectionForTestImpl();
        createTables(sqlConnectionForTest.getConnection());
        categoryDao = new CategoryDao(sqlConnectionForTest.getConnection());
        itemsDao = new ItemsDao(sqlConnectionForTest.getConnection());
    }

    private void createTables(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement(
                "CREATE TABLE Category" +
                        "(CategoryId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "Name varchar(100), PRIMARY KEY(CategoryId))");
        statement.executeUpdate();
        statement = connection.prepareStatement(
                "CREATE TABLE Items" +
                        "(ItemId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "ItemName varchar(100) not null, CategoryId int not null, " +
                        "Cost decimal(7,2) not null, NumberOfSells int," +
                        "PRIMARY KEY (ItemId), FOREIGN KEY (CategoryId)" +
                        " REFERENCES Category(CategoryId));");
        statement.executeUpdate();
        statement.close();
    }

    @Test
    public void setAndGetRecord() throws Exception {
        Category testCategory = new Category("Mobile phone");
        categoryDao.create(testCategory);
        Category expectedCategory = new Category("1, Mobile phone");

        List<Category> testCategories = categoryDao.getAll();

        assertTrue(testCategories.contains(expectedCategory));

    }

    @Test
    public void getNumberOfItemsInCategoryHasSizeTwo() throws Exception {
        Category testCategory = new Category("Mobile phone");
        categoryDao.create(testCategory);
        testCategory = new Category("Laptops");
        categoryDao.create(testCategory);
        Items testItems = new Items("Iphone, 0, 500.00, 10");
        itemsDao.create(testItems);
        testItems = new Items("Samsung Galaxy, 0, 500.00, 10");
        itemsDao.create(testItems);
        testItems = new Items("Lenovo z500, 1, 500.00, 3");
        itemsDao.create(testItems);

        assertThat(categoryDao.getNumberOfItemsInCategory("Mobile phone").size(), is(2));
    }
}
