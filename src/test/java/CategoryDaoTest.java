/**
 * Created by employee on 7/21/16.
 */

import dao.CategoryDao;
import dao.ItemsDao;
import entity.Category;
import entity.Item;
import org.junit.Before;
import org.junit.Test;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.HashMap;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

public class CategoryDaoTest {
    private CategoryDao categoryDao;
    private ItemsDao itemsDao;
    private SqlConnectionForTestImpl sqlConnectionForTest;

    @Before
    public void init() throws Exception {
        sqlConnectionForTest = new SqlConnectionForTestImpl();
        createTables(sqlConnectionForTest.getConnection());
        categoryDao = new CategoryDao(sqlConnectionForTest.getConnection());
        itemsDao = new ItemsDao(sqlConnectionForTest.getConnection());
        createDataForTables();
    }

    private void createTables(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement(
                "CREATE TABLE Categories" +
                        "(CategoryId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "Name varchar(100), PRIMARY KEY(CategoryId))");
        statement.executeUpdate();
        statement = connection.prepareStatement(
                "CREATE TABLE Items" +
                        "(ItemId int not null GENERATED BY DEFAULT AS IDENTITY, " +
                        "ItemName varchar(100) not null, CategoryId int not null, " +
                        "Cost decimal(7,2) not null, " +
                        "PRIMARY KEY (ItemId), FOREIGN KEY (CategoryId)" +
                        " REFERENCES Categories(CategoryId));");
        statement.executeUpdate();
        statement.close();
    }

    private void createDataForTables() throws Exception {
        Category testCategory = new Category();
        testCategory.setCategoryName("Mobile phone");
        categoryDao.create(testCategory);

        testCategory = new Category();
        testCategory.setCategoryName("Laptops");
        categoryDao.create(testCategory);

        Item testItem = new Item();
        testItem.setItemName("Iphone");
        testItem.setCategoryId(0);
        testItem.setCost(BigDecimal.valueOf(500.00));
        itemsDao.create(testItem);

        testItem = new Item();
        testItem.setItemName("Samsung Galaxy");
        testItem.setCategoryId(0);
        testItem.setCost(BigDecimal.valueOf(500.00));
        itemsDao.create(testItem);

        testItem = new Item();
        testItem.setItemName("Lenovo z500");
        testItem.setCategoryId(1);
        testItem.setCost(BigDecimal.valueOf(500.00));
        itemsDao.create(testItem);
    }

    @Test
    public void getNumberOfItemsInCategoryHasSizeTwo() throws Exception {
        HashMap<Category, Integer> testHashMap = new HashMap<>();
        testHashMap.put(categoryDao.getAll().get(0),2);
        assertThat(categoryDao.getNumberOfItemsInCategory(0), is(testHashMap));
    }
}
